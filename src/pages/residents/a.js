import React, { useState, useEffect } from 'react'
import { Table, Button, Modal, Input, Form, message } from 'antd';
import { reqResidentsUsers, reqAddresidentsUsers, reqdelResidents } from '../../api';
import { SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';
import './residents.less';

/*ÁõÆÊ†áÁªÑ‰ª∂ */
const Residents = () => {
  // const residentsList ={userList: [],isModalVisible: false,isModalVisibleEditor: false}
  // const [state, setstate] = useState(residentsList)
  // console.log("üöÄ ~ file: residents.js ~ line 11 ~ Residents ~ userList", state.userList)
  const [userList,setUserList] = useState([])
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [isModalVisibleEditor, setIsModalVisibleEditor] = useState(false);


  const showModal = () => {
    setIsModalVisible(true);
  };

  const handleOk = () => {
    setIsModalVisible(false);
  };

  const handleCancel = () => {
    setIsModalVisible(false);
  };


  const onFinish = async(values) => {
    const {name,age,email,professional,iphone,birthday,address} = values
    const result = await reqAddresidentsUsers(name,age,email,professional,iphone,birthday,address)
    if (result.status == 200) {
      message.success('Ê∑ªÂä†Áî®Êà∑ÊàêÂäü')
      handleCancel() // Ê∑ªÂä†ÊàêÂäüÂÖ≥Èó≠ÂºπÁ™ó
      queryUsers() // Ê∑ªÂä†ÊàêÂäüÈáçÊñ∞Êü•ËØ¢Áî®Êà∑ÂàóË°®
    } else {
      message.error('Ê∑ªÂä†Áî®Êà∑Â§±Ë¥•/Áî®Êà∑ÂêçÂ∑≤Â≠òÂú®')
    }
  }

  const onFinishFailed = (errorInfo) => {
    message.error('ËØ∑Ê∑ªÂä†Áî®Êà∑')
  };

  /**
   * Âà†Èô§Â±ÖÊ∞ëÁî®Êà∑
   */
  const delUsers = async(i,name) => {
    const result = await reqdelResidents(i)
    if(result.status === 200) {
      message.success(`Âà†Èô§${name}Áî®Êà∑ÊàêÂäü!`)
      queryUsers() // ÈáçÊñ∞Ë∞ÉÁî®userlistË°®
    } else {
      message.error(`Âà†Èô§${name}Áî®Êà∑Â§±Ë¥•!`)
    }
  }

  /**
   * Êü•ËØ¢ÊâÄÊúâÁî®Êà∑
   */
  const queryUsers = async() => {
    const result = await reqResidentsUsers()
    console.log("üöÄ ~ file: residents.js ~ line 26 ~ queryUsers ~ result", result)
    if(result.status == 200) {
      const userList = result.data
      setUserList({userList})
    }
  }

  useEffect(() => {
    queryUsers()
  }, [])

  /**
   * ÁºñËæëÂ±ÖÊ∞ë‰ø°ÊÅØ
   */
  const editor = (i) => {
    console.log(i)
  }

  const showEditor = () => {
    setIsModalVisibleEditor(true)
  }

  const editorHandleOk = () => {
    setIsModalVisibleEditor(false);
  };

  const editorHandleCancel = () => {
    setIsModalVisibleEditor(false);
  };

  const editorOnFinish = (values) => {
  }

  const editorOnFinishFailed = (errorInfo) => {
    // message.error('ËØ∑Ê∑ªÂä†Áî®Êà∑')
  };

  const columns = [
    {
      title: 'Id',
      dataIndex: 'id',
      width: 50,
      sorter: (a, b) => a.id - b.id,
    },
    {
      title: 'ÂßìÂêç',
      dataIndex: 'name',
      width: 150,
    },
    {
      title: 'Âπ¥ÈæÑ',
      dataIndex: 'age',
      width: 80,
      sorter: (a, b) => a.age - b.age,
    },
    {
      title: 'ÈÇÆÁÆ±',
      dataIndex: 'email',
      width: 180,
    },
    {
      title: 'ËÅå‰∏ö',
      dataIndex: 'professional',
      width: 120,
    },
    {
      title: 'ÊâãÊú∫Âè∑',
      dataIndex: 'iphone',
      width: 150,
    },
    {
      title: 'ÁîüÊó•',
      dataIndex: 'birthday',
      width: 150,
    },
    {
      title: 'Âú∞ÂùÄ',
      dataIndex: 'address',
    },
    {
      title: 'Êìç‰Ωú',
      dataIndex: 'operation',
      width: 200,
    }
  ]

  const data = [];
  console.log(userList)
  for (let i = 0; i < userList.length; i++) {
    data.push({
      key: i,
      id: `${i+1}`,
      name: `${userList[i].name}`,
      age: `${userList[i].age}`,
      email: `${userList[i].email}`,
      professional: `${userList[i].professional}`,
      iphone: `${userList[i].iphone}`,
      birthday: `${userList[i].birthday}`,
      address: `${userList[i].address}`,
      operation: <div>
        <Button type="primary" onClick={() => editor(i)}>
          <span onClick={showEditor()}>ÁºñËæë</span>
        </Button>
        <Button
          type="primary"
          danger
          style={{marginLeft:'10px'}}
          onClick={() => delUsers(userList[i].id,userList[i].name)}>Âà†Èô§</Button>
      </div>
    });
  }

  return (
    <div className='residents'>
      {/* ÁºñËæëmodal */}
      <Modal
          title="Ê∑ªÂä†Â±ÖÊ∞ë‰ø°ÊÅØ"
          footer={null}
          visible={isModalVisibleEditor}
          onOk={editorHandleOk}
          onCancel={editorHandleCancel}
        >
          <Form
            name="basic"
            labelCol={{ span: 8 }}
            wrapperCol={{ span: 16 }}
            initialValues={{ remember: true }}
            onFinish={editorOnFinish}
            onFinishFailed={editorOnFinishFailed}
            autoComplete="off"
          >
            <Form.Item
              label="id"
              name="id"
            >
              <Input disabled={true} size='small' />
            </Form.Item>

            <Form.Item
              label="ÂßìÂêç"
              name="name"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÂßìÂêç!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="Âπ¥ÈæÑ"
              name="age"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÂπ¥ÈæÑ!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="ÈÇÆÁÆ±"
              name="email"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÈÇÆÁÆ±!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="ËÅå‰∏ö"
              name="professional"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëËÅå‰∏ö!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="ÊâãÊú∫Âè∑Á†Å"
              name="iphone"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Áî®Êà∑ÊâãÊú∫Âè∑Á†Å!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="ÁîüÊó•"
              name="birthday"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÁîüÊó•!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="Â±Ö‰ΩèÂú∞ÂùÄ"
              name="address"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÂ±Ö‰ΩèÂú∞ÂùÄ!' }]}
            >
              <Input />
            </Form.Item>
            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>
              <Button type="primary" htmlType="submit">
                Ê∑ªÂä†
              </Button>
            </Form.Item>
          </Form>
        </Modal>

      {/* Ê∑ªÂä† */}
      <div>
        <Button type="primary"
          icon={<PlusCircleOutlined />}
          onClick={showModal}
          style={{margin: '10px 0'}}
        >
          Ê∑ªÂä†
        </Button>
        <Modal
          title="Ê∑ªÂä†Â±ÖÊ∞ë‰ø°ÊÅØ"
          footer={null}
          visible={isModalVisible}
          onOk={handleOk}
          onCancel={handleCancel}
        >
          <Form
            name="basic"
            labelCol={{ span: 8 }}
            wrapperCol={{ span: 16 }}
            initialValues={{ remember: true }}
            onFinish={onFinish}
            onFinishFailed={onFinishFailed}
            autoComplete="off"
          >
            <Form.Item
              label="ÂßìÂêç"
              name="name"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÂßìÂêç!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="Âπ¥ÈæÑ"
              name="age"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÂπ¥ÈæÑ!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="ÈÇÆÁÆ±"
              name="email"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÈÇÆÁÆ±!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="ËÅå‰∏ö"
              name="professional"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëËÅå‰∏ö!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="ÊâãÊú∫Âè∑Á†Å"
              name="iphone"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Áî®Êà∑ÊâãÊú∫Âè∑Á†Å!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="ÁîüÊó•"
              name="birthday"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÁîüÊó•!' }]}
            >
              <Input />
            </Form.Item>

            <Form.Item
              label="Â±Ö‰ΩèÂú∞ÂùÄ"
              name="address"
              rules={[{ required: true, message: 'ËØ∑Ê∑ªÂä†Â±ÖÊ∞ëÂ±Ö‰ΩèÂú∞ÂùÄ!' }]}
            >
              <Input />
            </Form.Item>
            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>
              <Button type="primary" htmlType="submit">
                Ê∑ªÂä†
              </Button>
            </Form.Item>
          </Form>
        </Modal>
      </div>
      <Table
        bordered={true}
        columns={columns}
        dataSource={data}
        scroll={{y:'380px'}}
      />
    </div>
  )
}

export default Residents
